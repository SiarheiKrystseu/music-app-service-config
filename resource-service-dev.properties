server.port=${SERVER_PORT}
eureka.client.service-url.defaultZone=http://discovery-server:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
storage-service.endpoint=http://storage-service:8083/api/storages

# Eureka configuration
eureka.instance.lease-renewal-interval-in-seconds=5
eureka.instance.lease-expiration-duration-in-seconds=10
eureka.client.registry-fetch-interval-seconds=5

# DataSource configuration
spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5442}/${POSTGRES_DB:resources_db}
spring.datasource.username=${POSTGRES_USER:postgres}
spring.datasource.password=${POSTGRES_PASSWORD:mysecretpassword}

# Hibernate properties
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.defer-datasource-initialization=true
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.id.new_generator_mappings=false
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false


# Logging configuration
logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.org.hibernate=ERROR

# AWS configuration
cloud.aws.credentials.access-key=${CLOUD_AWS_CREDENTIALS_ACCESS_KEY}
cloud.aws.credentials.secret-key=${CLOUD_AWS_CREDENTIALS_SECRET_KEY}
cloud.aws.region.static=${CLOUD_AWS_REGION_STATIC:us-east-1}
cloud.aws.s3.endpoint=${CLOUD_AWS_S3_ENDPOINT:http://localstack:4566}
cloud.aws.s3.staging-bucket-name=${CLOUD_AWS_S3_STAGING_BUCKET_NAME}
cloud.aws.s3.permanent-bucket-name=${CLOUD_AWS_S3_PERMANENT_BUCKET_NAME}

# RabbitMQ configuration
spring.rabbitmq.host=${SPRING_RABBITMQ_HOST:rabbitmq}
spring.rabbitmq.port=${SPRING_RABBITMQ_PORT:5672}
spring.rabbitmq.username=${SPRING_RABBITMQ_USERNAME:test}
spring.rabbitmq.password=${SPRING_RABBITMQ_PASSWORD:test}
resource.rabbitmq.exchange=${RESOURCE_RABBITMQ_EXCHANGE:resource-exchange}
resource.rabbitmq.queue=${RESOURCE_RABBITMQ_QUEUE:resource-process-queue}
resource.ack.queue=${RESOURCE_ACK_QUEUE:resource-ack-queue}

spring.rabbitmq.listener.simple.default-requeue-rejected=false
spring.codec.max-in-memory-size=52428800
